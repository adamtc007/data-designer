{
  "metadata": {
    "version": "1.0",
    "description": "Dynamic DSL Grammar Rules",
    "created": "2025-10-06",
    "author": "Data Designer"
  },
  "grammar": {
    "name": "DSL",
    "rules": [
      {
        "name": "WHITESPACE",
        "definition": "_{ \" \" | \"\\t\" | \"\\n\" | \"\\r\" }",
        "type": "silent",
        "description": "Whitespace characters"
      },
      {
        "name": "COMMENT",
        "definition": "_{ \"//\" ~ (!\"\\n\" ~ ANY)* }",
        "type": "silent",
        "description": "Single line comments"
      },
      {
        "name": "identifier",
        "definition": "@{ ASCII_ALPHA ~ (ASCII_ALPHANUMERIC | \"_\")* }",
        "type": "atomic",
        "description": "Variable and attribute names"
      },
      {
        "name": "number",
        "definition": "@{ \"-\"? ~ ASCII_DIGIT+ ~ (\".\" ~ ASCII_DIGIT+)? }",
        "type": "atomic",
        "description": "Numeric literals (integers and floats)"
      },
      {
        "name": "string",
        "definition": "@{ \"\\\"\" ~ (!\"\\\"\" ~ ANY)* ~ \"\\\"\" | \"'\" ~ (!\"'\" ~ ANY)* ~ \"'\" }",
        "type": "atomic",
        "description": "String literals with single or double quotes"
      },
      {
        "name": "add_op",
        "definition": "{ \"+\" }",
        "type": "normal",
        "description": "Addition operator"
      },
      {
        "name": "sub_op",
        "definition": "{ \"-\" }",
        "type": "normal",
        "description": "Subtraction operator"
      },
      {
        "name": "mul_op",
        "definition": "{ \"*\" }",
        "type": "normal",
        "description": "Multiplication operator"
      },
      {
        "name": "div_op",
        "definition": "{ \"/\" }",
        "type": "normal",
        "description": "Division operator"
      },
      {
        "name": "concat_op",
        "definition": "{ \"&\" }",
        "type": "normal",
        "description": "String concatenation operator"
      },
      {
        "name": "substring_fn",
        "definition": "{ \"SUBSTRING\" ~ \"(\" ~ expression ~ \",\" ~ expression ~ \",\" ~ expression ~ \")\" }",
        "type": "normal",
        "description": "SUBSTRING function call"
      },
      {
        "name": "concat_fn",
        "definition": "{ \"CONCAT\" ~ \"(\" ~ expression ~ (\",\" ~ expression)* ~ \")\" }",
        "type": "normal",
        "description": "CONCAT function call"
      },
      {
        "name": "lookup_fn",
        "definition": "{ \"LOOKUP\" ~ \"(\" ~ expression ~ \",\" ~ string ~ \")\" }",
        "type": "normal",
        "description": "LOOKUP function call"
      },
      {
        "name": "function_call",
        "definition": "_{ substring_fn | concat_fn | lookup_fn }",
        "type": "silent",
        "description": "Any function call"
      },
      {
        "name": "primary",
        "definition": "_{ function_call | \"(\" ~ expression ~ \")\" | identifier | number | string }",
        "type": "silent",
        "description": "Primary expressions (atoms with parentheses)"
      },
      {
        "name": "term",
        "definition": "{ primary ~ (mul_op ~ primary | div_op ~ primary)* }",
        "type": "normal",
        "description": "Terms with multiplication and division"
      },
      {
        "name": "expression",
        "definition": "{ term ~ (add_op ~ term | sub_op ~ term | concat_op ~ term)* }",
        "type": "normal",
        "description": "Full expressions with operator precedence"
      },
      {
        "name": "assignment",
        "definition": "{ identifier ~ \"=\" ~ expression }",
        "type": "normal",
        "description": "Variable assignment statements"
      },
      {
        "name": "comparison_op",
        "definition": "{ \"==\" | \"!=\" | \">=\" | \"<=\" | \">\" | \"<\" }",
        "type": "normal",
        "description": "Comparison operators"
      },
      {
        "name": "condition",
        "definition": "{ identifier ~ comparison_op ~ (identifier | number | string) }",
        "type": "normal",
        "description": "Boolean conditions"
      },
      {
        "name": "if_clause",
        "definition": "{ \"IF\" ~ condition ~ (\"AND\" ~ condition | \"OR\" ~ condition)* }",
        "type": "normal",
        "description": "IF conditional clause"
      },
      {
        "name": "then_clause",
        "definition": "{ \"THEN\" ~ assignment }",
        "type": "normal",
        "description": "THEN action clause"
      },
      {
        "name": "rule",
        "definition": "{ \"RULE\" ~ string ~ if_clause ~ then_clause }",
        "type": "normal",
        "description": "Complete business rule"
      },
      {
        "name": "file",
        "definition": "{ SOI ~ rule* ~ EOI }",
        "type": "normal",
        "description": "Root rule for parsing files"
      }
    ]
  },
  "extensions": {
    "operators": {
      "arithmetic": ["+", "-", "*", "/"],
      "string": ["&"],
      "comparison": ["==", "!=", ">", "<", ">=", "<="],
      "logical": ["AND", "OR"]
    },
    "functions": [
      {
        "name": "SUBSTRING",
        "signature": "(string, start, length)",
        "description": "Extract substring from position"
      },
      {
        "name": "CONCAT",
        "signature": "(string1, string2, ...)",
        "description": "Concatenate multiple strings"
      },
      {
        "name": "LOOKUP",
        "signature": "(key, table)",
        "description": "Look up value from external table"
      }
    ],
    "keywords": ["RULE", "IF", "THEN", "AND", "OR", "SUBSTRING", "CONCAT", "LOOKUP"]
  }
}